{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["unityContent","UnityContent","ChangeColorBtn","Button","size","variant","className","style","background","color","type","onClick","send","ChangeColorBtn2","ChangeColorBtn3","ChangeColorBtn4","App","options","animationData","dragHand","href","position","zIndex","bottom","right","width","display","justifyContent","Box","id","paddingBottom","backgroundColor","minHeight","paddingTop","Container","maxWidth","Grid","container","spacing","margin","item","lg","md","xl","xs","Typography","textAlign","component","gutterBottom","fontSize","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b535adab.chunk.js","sourcesContent":["import React from 'react';\nimport Unity, { UnityContent } from 'react-unity-webgl';\nimport { Button, Box, Grid, Container, Typography } from '@material-ui/core';\nimport Lottie from 'lottie-react-web';\nimport dragHand from './dragHand.json';\nimport './App.css';\n\nconst unityContent = new UnityContent(\n  '/Build/CarColorChange.json',\n  '/Build/UnityLoader.js'\n);\n\n// 色変更ボタンを作成\nconst ChangeColorBtn: React.FC = () => (\n  <Button size=\"large\" variant=\"contained\"\n    className=\"colorChangeBtn\"\n    style={{background: 'blue', color: 'white'}}\n    type=\"button\"\n    onClick={(): void => {\n      // unityContent.send(\"オブジェクト名\", \"メソッド名（Unity側でつくられている）\", 1);\n      unityContent.send(\"Audi R8\", \"ChangeColor\", 1);\n    }\n    }\n  >\n    {/* 青へ変更 */}\n  </Button>\n);\n\n// 色変更ボタンを作成\nconst ChangeColorBtn2: React.FC = () => (\n  <Button size=\"large\" variant=\"contained\"\n    className=\"colorChangeBtn\"\n    style={{background: 'red', color: 'white'}}\n    type=\"button\"\n    onClick={(): void => {\n      // unityContent.send(\"オブジェクト名\", \"メソッド名（Unity側でつくられている）\", 1);\n      unityContent.send(\"Audi R8\", \"ChangeColor2\", 1);\n    }\n    }\n  >\n    {/* 赤へ変更 */}\n  </Button>\n);\n\n// 色変更ボタンを作成\nconst ChangeColorBtn3: React.FC = () => (\n  <Button size=\"large\" variant=\"contained\"\n    className=\"colorChangeBtn\"\n    type=\"button\"\n    onClick={(): void => {\n      // unityContent.send(\"オブジェクト名\", \"メソッド名（Unity側でつくられている）\", 1);\n      unityContent.send(\"Audi R8\", \"ChangeColor3\", 1);\n    }\n    }\n  >\n    {/* 白へ変更 */}\n  </Button>\n);\nconst ChangeColorBtn4: React.FC = () => (\n  <Button size=\"large\" variant=\"contained\"\n    className=\"colorChangeBtn\"\n    style={{background: 'black', color: 'white'}}\n    type=\"button\"\n    onClick={(): void => {\n      // unityContent.send(\"オブジェクト名\", \"メソッド名（Unity側でつくられている）\", 1);\n      unityContent.send(\"Audi R8\", \"ChangeColor4\", 1);\n    }\n    }\n  >\n    {/* 黒へ変更 */}\n  </Button>\n);\n\nconst App: React.FC = () => (\n    <>\n      <div className=\"topView\">\n      <div className=\"dragHand fadeout\">\n        <Lottie\n          options={{\n            animationData: dragHand\n          }}\n        />\n      </div>\n        <a className=\"scrollBtn\" href=\"#secondContent\">↓Scroll</a>\n        <div className=\"btnBox\"\n          style={{ position: 'absolute', zIndex: 10, bottom: 10, right: 10, width: 300, display: 'flex', justifyContent: 'space-between' }}\n        >\n          <ChangeColorBtn />\n          <ChangeColorBtn2 />\n          <ChangeColorBtn3 />\n          <ChangeColorBtn4 />\n        </div>\n        <Unity unityContent={unityContent} className=\"unityWindow\"/>\n      </div>\n      <Box\n        id=\"secondContent\"\n        style={{\n          paddingBottom: 0,\n          backgroundColor: 'white',\n          minHeight: '100%',\n          paddingTop: 30\n        }}\n      >\n        <Container maxWidth={false}>\n          <Grid\n            container\n            spacing={3}\n          >\n            <Grid\n              style={{margin: 'auto'}}\n              item\n              lg={11}\n              md={12}\n              xl={12}\n              xs={12}\n            >\n              <Box>\n                <Typography style={{ textAlign: 'center' }} variant=\"h3\" component=\"h2\" gutterBottom>\n                  商品紹介Webアプリケーション\n                </Typography>\n                <Typography style={{ fontSize: '1.2rem' }} variant=\"body1\" gutterBottom>\n                  <br />\n                  3Dデータを利用することで実物に近いビジュアルで商品を紹介出来るWebアプリケーションです。\n                  <br />\n                  右下のボタンを押すことで車の色の変更が可能です。また、画面上をクリックしながらドラッグすることで車を360度見ることができます。\n                  <br />\n                  <br />\n                  3Dの部分はUnityを使用してリアルタイムレンダリングやモデルを回転させる動作を行っております。\n                  <br />\n                  UI部分はReactを使用しており、Reactの豊富なUIが使用可能です。今回はMaterial UIを使用してカラーセレクトのボタンを作成しました。\n                  <br />\n                  <br />\n                  <br />\n                  <br />\n                </Typography>\n                <Typography variant=\"h4\" component=\"h4\" gutterBottom>\n                  作成経緯\n                </Typography>\n                <Typography style={{ fontSize: '1.2rem' }} variant=\"body1\" gutterBottom>\n                  元々学生の頃からUnityをさわっており、WebでもUnityを使用したものが作れないかとずっと考えておりました。\n                  <br />\n                  <br />\n                  今回、Reactを勉強していく中でUnityとの連携ができると知り、UnityとReactの良いところ同志を\n                  使って3Dで商品を紹介できるWebアプリケーションを作成しました。\n                  <br />\n                  <br />\n                  <br />\n                  <br />\n                </Typography>\n                <Typography variant=\"h4\" component=\"h4\" gutterBottom>\n                  React\n                </Typography>\n                <Typography style={{ fontSize: '1.2rem' }} variant=\"body1\" gutterBottom>\n                  ReactとUnityのコンポーネント間の連携が可能です。そのため、既存のReactアプリにUnityを使用することも\n                  簡単にできます。\n                  <br />\n                  <br />\n                  <br />\n                  <br />\n                </Typography>\n                <Typography variant=\"h4\" component=\"h4\" gutterBottom>\n                  Unity\n                </Typography>\n                <Typography style={{ fontSize: '1.2rem' }} variant=\"body1\" gutterBottom>\n                  JavaScriptのみでも3Dの使用は可能ですが、Unityを使用することで\n                  容易にデータの変更やライティング・レイアウトの調整が可能です。\n                  <br />\n                  <br />\n                  <br />\n                  <br />\n                </Typography>\n              </Box>\n            </Grid>\n          </Grid>\n        </Container>\n      </Box>\n    </>\n);\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}